Titolo: Realizzazione di una web application di pubblicazione delle immagini.

Requisiti:

Deve essere utilizzato il linguaggio con cui ti trovi più a tuo agio, preferibile ma non obbligatorio l'utilizzo di PHP con un framework come Laravel, Symfony, Cakephp, etc.
Realizzare un’unica pagina (homepage) che mostra:
[DONE] 10 immagini prese da un database
[DONE] un pulsante per caricare (upload) una nuova foto
[DONE] un paginatore
[DONE] un filtro di ricerca
[DONE] una serie di comandi per l'ordinamento (select o pulsanti)
[DONE] un selettore (select o pulsante) per cambiare visualizzazione (vedi punto 5)
[DONE] un pulsante per attivare/disattivare la visualizzazione delle immagini escluse (vedi punto 7)

Le immagini (il loro path) e le altre informazioni sono memorizzati in un database a scelta
Ogni immagine deve avere un titolo, un’immagine (file), ed una data di caricamento
Nella homepage l’utente avrà la possibilità di visualizzare le immagini come lista (tabella) in cui ogni riga ha:
titolo, immagine, data
oppure come una griglia di “card” in cui ogni card avrà immagine, titolo e data.
Sarà quindi necessario un pulsante per passare dalla visualizzazione tabellare a griglia e viceversa

L'utente potrà decidere se ordinare per data, per titolo o in ordine casuale
L’utente ha un pulsante per escludere una o più immagini. Se ad esempio esclude la prima, quando ricarica la pagina
quell’immagine deve essere esclusa.
Il sito deve mantenere escluse le immagini che l’utente aveva escluso anche in altre sessioni.
Se viene attivata la visualizzazione delle
immagini escluse queste dovranno avere uno stile diverso e riconoscibile ed un pulsante per riammetterle
alla visualizzazione standard

Implementare una ricerca per sito che mostra solamente le immagini che nel titolo hanno la/le parola/e
inserite o anche una parte di esse
(se ho un’immagine con il titolo “gatti” e cerco “gatt”, l’immagine mi viene restituita tra i risultati

L'utente deve avere la possibilità di caricare nuove immagini inserendo il file e il titolo

Integrare un sistema di notifiche real-time con Mercure: se un utente carica una foto dal suo browser gli altri utenti vedranno
subito la nuova foto senza dover ricaricare la pagina

BONUS: se l'immagine contiene metadati (coordinate, data dello scatto etc.) mostrarle assieme altre informazioni
BONUS: se l'immagine contiene tra i metadati estrarre la località e mostrare il meteo attuale interrogando  https://open-meteo.com/ o servizi simili
BONUS: se l'immagine contiene tra i metadati la località e la data dello scatto mostrare i meteo storico

entity images
- id
- path
- creation_date
- title
- metadata


entity users
- id
- username

entity excluded_images
- id_user
- id_image
- exclusion_date